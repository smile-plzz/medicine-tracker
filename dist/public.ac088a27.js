document.addEventListener("DOMContentLoaded",()=>{let e=document.getElementById("medicine-form"),t=document.querySelector("#schedule-table tbody"),n=document.getElementById("empty-schedule"),o=document.getElementById("download-pdf");document.getElementById("reset-schedule").addEventListener("click",()=>{confirm("Are you sure you want to clear the entire schedule? This action cannot be undone.")&&(localStorage.removeItem("medicineSchedule"),h=[],E())});let i=document.getElementById("patient-name"),a=document.getElementById("add-time-btn"),d=()=>{let e=document.createElement("div");return e.className="flex items-center mb-2",e.innerHTML=`
            <input type="time" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" name="medicine-time" required>
            <button type="button" class="ml-2 text-red-500" onclick="removeTimeInput(this)">&times;</button>
        `,e};a.addEventListener("click",()=>{document.getElementById("time-inputs").appendChild(d())}),window.removeTimeInput=e=>{e.parentElement.remove()};let l=document.getElementById("medicine-name"),r=document.getElementById("autocomplete-suggestions"),s=(e,t)=>{let n;return(...o)=>{clearTimeout(n),n=setTimeout(()=>e.apply(this,o),t)}},c=async e=>{if(e.length<3){r.style.display="none";return}try{console.log("Fetching autocomplete suggestions for:",e);let t=await fetch(`https://rxnav.nlm.nih.gov/REST/drugs.json?name=${e}`);console.log("RxNav API response status:",t.status);let n=await t.json();console.log("RxNav API response data:",n);let o=n.drugGroup.drugList.drug?.map(e=>e.name)||[];console.log("Autocomplete suggestions:",o),u(o.slice(0,5))}catch(e){console.error("Failed to fetch suggestions:",e)}},u=e=>{if(0===e.length){r.style.display="none";return}r.innerHTML=e.map(e=>`<div class="p-2 hover:bg-gray-200 cursor-pointer">${e}</div>`).join(""),r.style.display="block"};r.addEventListener("click",e=>{"DIV"===e.target.tagName&&(l.value=e.target.textContent,r.style.display="none")}),l.addEventListener("input",s(async()=>{await c(l.value)},300));let m=document.getElementById("patient-dob"),p=document.getElementById("patient-contact"),g=document.getElementById("patient-allergies"),y=document.getElementById("doctor-name"),f=document.getElementById("doctor-contact"),v=()=>{let e={name:i.value,dob:m.value,contact:p.value,allergies:g.value,doctorName:y.value,doctorContact:f.value};localStorage.setItem("patientInfo",JSON.stringify(e))};i.addEventListener("input",v),m.addEventListener("input",v),p.addEventListener("input",v),g.addEventListener("input",v),y.addEventListener("input",v),f.addEventListener("input",v),(()=>{let e=JSON.parse(localStorage.getItem("patientInfo"));e&&(i.value=e.name||"",m.value=e.dob||"",p.value=e.contact||"",g.value=e.allergies||"",y.value=e.doctorName||"",f.value=e.doctorContact||"")})();let h=JSON.parse(localStorage.getItem("medicineSchedule"))||[],E=()=>{if(t.innerHTML="",0===h.length){n.style.display="block",o.disabled=!0;return}n.style.display="none",o.disabled=!1;let e=[];h.forEach(t=>{t.times.forEach(n=>{e.push({...t,time:n})})}),e.sort((e,t)=>e.time.localeCompare(t.time)).forEach(e=>{let n=document.createElement("tr");n.innerHTML=`
                <td class="border px-4 py-2">${e.time}</td>
                <td class="border px-4 py-2">${e.name}</td>
                <td class="border px-4 py-2">${e.dosage||"N/A"}</td>
                <td class="border px-4 py-2">${e.instructions||"N/A"}</td>
                <td class="border px-4 py-2">${e.info?.genericName||"N/A"}</td>
                <td class="border px-4 py-2">${e.info?.category||"N/A"}</td>
                <td class="border px-4 py-2">${e.info?.usage||"No information available."}</td>
                <td class="border px-4 py-2">
                    <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mr-2" onclick="editMedicine('${e.id}')">Edit</button>
                    <button class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded" onclick="deleteMedicine('${e.id}')">Delete</button>
                </td>
            `,t.appendChild(n)})},b=async(e,t,n,o,i)=>{let a=await I(e),d={id:self.crypto.randomUUID(),name:e,times:t,duration:n,dosage:o,instructions:i,info:a};h.push(d),localStorage.setItem("medicineSchedule",JSON.stringify(h)),E()},I=async e=>{try{let t=await fetch(`https://rxnav.nlm.nih.gov/REST/drugs.json?name=${e}`),n=await t.json();if(n.drugGroup.drugList&&n.drugGroup.drugList.drug){let e=n.drugGroup.drugList.drug[0].rxcui,t=await fetch(`https://rxnav.nlm.nih.gov/REST/rxcui/${e}/allproperties.json?prop=ALL`),o=await t.json(),i=o.propConceptGroup?.propConcept,a=i.find(e=>"DEFINITIONAL_FEATURES"===e.propName)?.propValue||"N/A",d=i.find(e=>"Drug Class"===e.propName)?.propValue||"N/A",l=i.find(e=>"RxNorm Name"===e.propName)?.propValue||"N/A";return{usage:a,category:d,genericName:l}}}catch(e){console.error("Failed to fetch medicine info:",e)}return null};window.editMedicine=e=>{let t=h.find(t=>t.id===e);if(t){document.getElementById("medicine-name").value=t.name,document.getElementById("medicine-duration").value=t.duration,document.getElementById("medicine-dosage").value=t.dosage||"",document.getElementById("medicine-instructions").value=t.instructions||"";let n=document.getElementById("time-inputs");n.innerHTML="",t.times.forEach(e=>{let t=d();t.querySelector('input[name="medicine-time"]').value=e,n.appendChild(t)}),deleteMedicine(e)}},window.deleteMedicine=e=>{h=h.filter(t=>t.id!==e),localStorage.setItem("medicineSchedule",JSON.stringify(h)),E()},e.addEventListener("submit",t=>{t.preventDefault();let n=document.getElementById("medicine-name").value,o=Array.from(document.querySelectorAll('input[name="medicine-time"]')).map(e=>e.value).filter(Boolean),i=document.getElementById("medicine-duration").value,a=document.getElementById("medicine-dosage").value,l=document.getElementById("medicine-instructions").value;if(o.length>0){console.log("Adding medicine:",{name:n,times:o,duration:i,dosage:a,instructions:l}),b(n,o,i,a,l),e.reset(),console.log("Form reset after submission.");let t=document.getElementById("time-inputs");t.innerHTML="",t.appendChild(d())}}),o.addEventListener("click",()=>{let{jsPDF:e}=window.jspdf,t=new e,n=i.value||"Patient",o=m.value,a=p.value,d=g.value,l=y.value,r=f.value,s=40;t.setFontSize(14),t.text("Patient Information:",20,s),t.setFontSize(12),s+=7,t.text(`Name: ${n}`,20,s),o&&(s+=7,t.text(`Date of Birth: ${o}`,20,s)),a&&(s+=7,t.text(`Contact: ${a}`,20,s)),d&&(s+=7,t.text(`Allergies: ${d}`,20,s)),(l||r)&&(s+=15,t.setFontSize(14),t.text("Doctor Information:",20,s),t.setFontSize(12),s+=7,l&&t.text(`Name: ${l}`,20,s),r&&(s+=7,t.text(`Contact: ${r}`,20,s))),s+=15;let c=[],u=[];h.forEach(e=>{e.times.forEach(t=>{u.push({...e,time:t})})}),u.sort((e,t)=>e.time.localeCompare(t.time)).forEach(e=>{let t=[e.time,e.name,e.dosage||"N/A",e.instructions||"N/A",e.info?.genericName||"N/A",e.info?.category||"N/A",e.info?.usage||"No information available."];c.push(t)}),t.autoTable(["Time","Medicine","Dosage","Instructions","Generic Name","Category","Description"],c,{startY:s,headStyles:{fillColor:[67,56,202],textColor:255,fontSize:10,fontStyle:"bold"},bodyStyles:{fontSize:9},alternateRowStyles:{fillColor:[240,240,240]},margin:{top:10,right:20,bottom:30,left:20},didDrawPage:function(e){t.setFontSize(22),t.text("Medication Schedule",105,20,null,null,"center"),t.setFontSize(12),t.text(`Date: ${new Date().toLocaleDateString()}`,180,30,null,null,"right"),t.setFontSize(8);let n=t.internal.pageSize.height;t.text("Disclaimer: Consult your doctor before making changes to your medication schedule.",20,n-20),t.text(`Generated on ${new Date().toLocaleString()}`,20,n-15)}}),t.save(`medication_schedule_${new Date().toISOString().slice(0,10)}.pdf`)}),E()});
//# sourceMappingURL=public.ac088a27.js.map
